name: Deploy to Development

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python test_ci.py
      env:
        PYTHONPATH: ${{ github.workspace }}

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible
    
    - name: Bump Development Version
      run: |
        # Get current dev version
        CURRENT_VERSION=$(cat version.dev.txt)
        echo "Current dev version: $CURRENT_VERSION"
        
        # Extract version parts
        if [[ $CURRENT_VERSION =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)-dev\.([0-9]+)$ ]]; then
          MAJOR=${BASH_REMATCH[1]}
          MINOR=${BASH_REMATCH[2]}
          PATCH=${BASH_REMATCH[3]}
          DEV_BUILD=${BASH_REMATCH[4]}
          
          # Increment dev build number
          NEW_DEV_BUILD=$((DEV_BUILD + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}-dev.${NEW_DEV_BUILD}"
        else
          # Fallback if format doesn't match
          NEW_VERSION="1.0.0-dev.1"
        fi
        
        echo "New dev version: $NEW_VERSION"
        
        # Update version files
        echo "$NEW_VERSION" > version.dev.txt
        echo "$NEW_VERSION" > version.txt
        
        # Commit and push version bump
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.dev.txt version.txt
        git commit -m "Bump development version to $NEW_VERSION"
        git push origin dev

    - name: Deploy to Development
      env:
        ANSIBLE_HOST_KEY_CHECKING: False
        VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "Debug: VAULT_PASSWORD length: ${#VAULT_PASSWORD}"
        echo "Debug: VAULT_PASSWORD starts with: ${VAULT_PASSWORD:0:10}..."
        echo "$VAULT_PASSWORD" > vault_pass.txt
        echo "Debug: vault_pass.txt contents:"
        cat vault_pass.txt
        echo "$SSH_PRIVATE_KEY" > ssh_key
        chmod 600 ssh_key
        echo "Debug: SSH key file contents (first 50 chars):"
        head -c 50 ssh_key
        echo ""
        echo "Debug: SSH key file size:"
        wc -c ssh_key
        echo "Debug: SSH key file permissions:"
        ls -la ssh_key
        ansible-playbook \
          --vault-password-file vault_pass.txt \
          -u ansible \
          --private-key ssh_key \
          -i ansible/inventory.yml \
          -e "deploy_path=/opt/hampuff-sms-dev" \
          -e "app_environment=development" \
          ansible/main.yml
        rm vault_pass.txt ssh_key
